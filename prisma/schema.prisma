// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:db/dev.db"
}

model Product {
  id                    String   @id @default(uuid())
  name                  String
  priceInCents          Int
  imagePath             String
  description           String
  isAvailableForPuchase Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())
  orders                Order[]
  userId                String
  // if user is deleted, and the user has associated products, also delete the products
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("products")
}

model User {
  id        String   @id @default(uuid())
  role      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  orders   Order[]
  products Product[]

  @@map("users")
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())

  userId    String
  productId String
  // if User is deleted, delete the associated orders
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  // if product is going to be deleted, but it still has associated order, don't allow deletion
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  @@map("orders")
}
